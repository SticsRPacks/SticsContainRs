BootStrap: library
From: ubuntu:16.04
Stage: build


%labels
  Maintainer Patrice Lecharpentier <patrice.lecharpentier@inra.fr>
  Updater Samuel Buis <samuel.buis@inra.fr>
  R_Version 3.6.3

%apprun R
  exec R "${@}"

%apprun Rscript
  exec Rscript "${@}"

%runscript
  exec R "${@}"

%environment

%files
 

%post
  # Software versions
  export R_VERSION=3.6.3

  # Get dependencies
  apt-get update
  apt-get install -y --no-install-recommends \
    locales

  # Configure default locale
  echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
  locale-gen en_US.utf8
  /usr/sbin/update-locale LANG=en_US.UTF-8
  export LC_ALL=en_US.UTF-8
  export LANG=en_US.UTF-8

  # Install R
  echo "deb http://cran.r-project.org/bin/linux/ubuntu xenial-cran35/" > /etc/apt/sources.list.d/r.list
  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
  apt-get update
  apt-get install -y --no-install-recommends --allow-unauthenticated \
    r-base=${R_VERSION}* \
    r-base-core=${R_VERSION}* \
    r-base-dev=${R_VERSION}* \
    r-recommended=${R_VERSION}* \
    r-base-html=${R_VERSION}* \
    r-doc-html=${R_VERSION}* \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    libcairo2-dev \
    libxt-dev \
    libicu-dev \
    libgmp-dev \
    libxslt1-dev
    

  # Add a default CRAN mirror
  echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')" >> /usr/lib/R/etc/Rprofile.site

  # Add a directory for host R libraries
  mkdir -p /library
  # Add a custom path for installing packages
  echo "R_LIBS_SITE=/library" >> /usr/lib/R/etc/Renviron.site
  # Removing user library path using .libPaths("")
  # appearing at the first place in .libpaths(), and useless
  echo ".libPaths(\"\")" >> /usr/lib/R/etc/Rprofile.site
  # resulting paths
  # .libPaths()
  # [1] "/library"           "/usr/lib/R/library"


  
  # add needed packages
  echo install.packages\(\"devtools\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  echo install.packages\(\"R6\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  echo install.packages\(\"Rcpp\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  
  #echo install.packages\(\"dplyr\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  #echo install.packages\(\"nloptr\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  #echo install.packages\(\"DiceDesign\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  #echo install.packages\(\"doParallel\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  #echo install.packages\(\"XML\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  #echo install.packages\(\"lubridate\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  #echo install.packages\(\"data.table\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  #echo install.packages\(\"stringi\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  #echo install.packages\(\"sensitivity\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave
  #echo install.packages\(\"dfoptim\"\, repos\=\'https://cloud.r-project.org\'\) | R --slave

  # installing SticsRPacks packages
  #echo install.packages\(\"/tmp/SticsRFiles_0.0.0.9000.tar.gz\"\,repos\=NULL\, type \= \"source\"\) | R --slave
  #echo install.packages\(\"/tmp/SticsOnR_1.1.0.tar.gz\"\,repos\=NULL\, type \= \"source\"\) | R --slave
  #echo install.packages\(\"/tmp/SticsOptimizR_0.0.0.9000.tar.gz\"\,repos\=NULL\, type \= \"source\"\) | R --slave  

  # Installing SticsRPacks packages
  echo devtools::install_github\(\"SticsRPacks/SticsRPacks\"\) | R --slave

  # Clean up
  rm -rf /var/lib/apt/lists/*
  
  
  
  
  
